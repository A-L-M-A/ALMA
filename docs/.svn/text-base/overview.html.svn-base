<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<html>
<head>
</head>
<body bgcolor="white">

<P>
Provides classes and interfaces for infering emotional states based on emotion eliciting conditions. 

<P>An emotion-inducing situation which can be an event, an action, or an object is called emotion <em>elicitor</em>. An agent's subjective appraisal of such an emotion-inducing situation is represented as an <code>EEC</code> (Emotion Eliciting Condition). The appraisal is based on three central variables: <code>Desirability</code>, <code>Praiseworthiness</code>, and <code>Appealingness</code> which apply to event-based emotions, agent-based emotions, and object-based emotions respectively. Besides, there are other local variables: <code>Agency</code>, <code>Likelihood</code>, <code>Liking</code>, and <code>Realization</code> which only affect particular groups of emotions. The degree of each of these variables is specified by a real number greater than or equal to <code>0.0</code> and less than <code>1.0</code>. The <code>EEC</code> class also provides some constant values which can be used instead.

<P>The <code>EmotionEngine</code> class stores an agent's <code>Personality</code>, and infers emotions based on a list of Emotion Eliciting Conditions and the specified emotion history. The <em>type</em> and the <em>intensity</em> of the infered <code>Emotion</code> are determined by the variables of the Emotion Eliciting Condition. The intensity is also influenced by the personality of an agent characterized by the traits <em>extraversion</em>, <em>agreeableness</em>, and <em>neuroticism</em>. The infered emotions are stored in an <code>EmotionVector</code> which holds a collection of emotions for a predefined set of emotion types.

<P>The <code>EmotionHistory</code> can be used to store the infered emotions for a specific agent. The emotion history also allows to compute the <em>emotional state</em> of an agent. The emotional state is a collection of the emotions with the highest intensity for each type in the history. It can be displayed by the <code>EmotionMonitor</code>.

<P>The decay process for each emotion is controlled by the <code>DecayFunction</code>. The decay function decays the intensity of an emotion towards the emotion's baseline. The baseline depends on the emotion type and the agent's personality. The decay of emotions can be parameterised by:<br>
<ul>
<li>the time that it takes to decay an emotion with full intensity towards the baseline <br>(<code>Emotion Decay Time</code>)
<li>the the number of <em>decay steps</em> during this period.
</ul>
Currently there are three different decay functions:
<P>
<table>
  <tr>
    <td width="50%" align="center"><img src="..\linear.gif"></td>
    <td width="50%" align="center"><img src="..\exponential.gif"></td>
    <td width="50%" align="center"><img src="..\hyperbolic.gif"></td>
  </tr>
  <tr>
    <td width="50%" align="center"><code>LinearDecayFunction</code></td>
    <td width="50%" align="center"><code>ExponentialDecayFunction</code></td>
    <td width="50%" align="center"><code>TangensHyperbolicusDecayFunction</code></td>
  </tr>
</table>
</body>
</html>
