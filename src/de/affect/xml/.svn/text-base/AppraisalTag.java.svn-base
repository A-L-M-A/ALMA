/*
 * XML Type:  AppraisalTag
 * Namespace: xml.affect.de
 * Java type: de.affect.xml.AppraisalTag
 *
 * Automatically generated - do not modify.
 */
package de.affect.xml;


/**
 * An XML AppraisalTag(@xml.affect.de).
 *
 * This is a complex type.
 */
public interface AppraisalTag extends org.apache.xmlbeans.XmlObject
{
    public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
        org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(AppraisalTag.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s876F60A6E4A4858327667D81EFEC6F41").resolveHandle("appraisaltageba1type");
    
    /**
     * Gets the "GoodEvent" element
     */
    de.affect.xml.AppraisalTag.GoodEvent getGoodEvent();
    
    /**
     * True if has "GoodEvent" element
     */
    boolean isSetGoodEvent();
    
    /**
     * Sets the "GoodEvent" element
     */
    void setGoodEvent(de.affect.xml.AppraisalTag.GoodEvent goodEvent);
    
    /**
     * Appends and returns a new empty "GoodEvent" element
     */
    de.affect.xml.AppraisalTag.GoodEvent addNewGoodEvent();
    
    /**
     * Unsets the "GoodEvent" element
     */
    void unsetGoodEvent();
    
    /**
     * Gets the "GoodEventForGoodOther" element
     */
    de.affect.xml.AppraisalTag.GoodEventForGoodOther getGoodEventForGoodOther();
    
    /**
     * True if has "GoodEventForGoodOther" element
     */
    boolean isSetGoodEventForGoodOther();
    
    /**
     * Sets the "GoodEventForGoodOther" element
     */
    void setGoodEventForGoodOther(de.affect.xml.AppraisalTag.GoodEventForGoodOther goodEventForGoodOther);
    
    /**
     * Appends and returns a new empty "GoodEventForGoodOther" element
     */
    de.affect.xml.AppraisalTag.GoodEventForGoodOther addNewGoodEventForGoodOther();
    
    /**
     * Unsets the "GoodEventForGoodOther" element
     */
    void unsetGoodEventForGoodOther();
    
    /**
     * Gets the "GoodEventForBadOther" element
     */
    de.affect.xml.AppraisalTag.GoodEventForBadOther getGoodEventForBadOther();
    
    /**
     * True if has "GoodEventForBadOther" element
     */
    boolean isSetGoodEventForBadOther();
    
    /**
     * Sets the "GoodEventForBadOther" element
     */
    void setGoodEventForBadOther(de.affect.xml.AppraisalTag.GoodEventForBadOther goodEventForBadOther);
    
    /**
     * Appends and returns a new empty "GoodEventForBadOther" element
     */
    de.affect.xml.AppraisalTag.GoodEventForBadOther addNewGoodEventForBadOther();
    
    /**
     * Unsets the "GoodEventForBadOther" element
     */
    void unsetGoodEventForBadOther();
    
    /**
     * Gets the "GoodLikelyFutureEvent" element
     */
    de.affect.xml.AppraisalTag.GoodLikelyFutureEvent getGoodLikelyFutureEvent();
    
    /**
     * True if has "GoodLikelyFutureEvent" element
     */
    boolean isSetGoodLikelyFutureEvent();
    
    /**
     * Sets the "GoodLikelyFutureEvent" element
     */
    void setGoodLikelyFutureEvent(de.affect.xml.AppraisalTag.GoodLikelyFutureEvent goodLikelyFutureEvent);
    
    /**
     * Appends and returns a new empty "GoodLikelyFutureEvent" element
     */
    de.affect.xml.AppraisalTag.GoodLikelyFutureEvent addNewGoodLikelyFutureEvent();
    
    /**
     * Unsets the "GoodLikelyFutureEvent" element
     */
    void unsetGoodLikelyFutureEvent();
    
    /**
     * Gets the "GoodUnlikelyFutureEvent" element
     */
    de.affect.xml.AppraisalTag.GoodUnlikelyFutureEvent getGoodUnlikelyFutureEvent();
    
    /**
     * True if has "GoodUnlikelyFutureEvent" element
     */
    boolean isSetGoodUnlikelyFutureEvent();
    
    /**
     * Sets the "GoodUnlikelyFutureEvent" element
     */
    void setGoodUnlikelyFutureEvent(de.affect.xml.AppraisalTag.GoodUnlikelyFutureEvent goodUnlikelyFutureEvent);
    
    /**
     * Appends and returns a new empty "GoodUnlikelyFutureEvent" element
     */
    de.affect.xml.AppraisalTag.GoodUnlikelyFutureEvent addNewGoodUnlikelyFutureEvent();
    
    /**
     * Unsets the "GoodUnlikelyFutureEvent" element
     */
    void unsetGoodUnlikelyFutureEvent();
    
    /**
     * Gets the "BadEvent" element
     */
    de.affect.xml.AppraisalTag.BadEvent getBadEvent();
    
    /**
     * True if has "BadEvent" element
     */
    boolean isSetBadEvent();
    
    /**
     * Sets the "BadEvent" element
     */
    void setBadEvent(de.affect.xml.AppraisalTag.BadEvent badEvent);
    
    /**
     * Appends and returns a new empty "BadEvent" element
     */
    de.affect.xml.AppraisalTag.BadEvent addNewBadEvent();
    
    /**
     * Unsets the "BadEvent" element
     */
    void unsetBadEvent();
    
    /**
     * Gets the "BadEventForGoodOther" element
     */
    de.affect.xml.AppraisalTag.BadEventForGoodOther getBadEventForGoodOther();
    
    /**
     * True if has "BadEventForGoodOther" element
     */
    boolean isSetBadEventForGoodOther();
    
    /**
     * Sets the "BadEventForGoodOther" element
     */
    void setBadEventForGoodOther(de.affect.xml.AppraisalTag.BadEventForGoodOther badEventForGoodOther);
    
    /**
     * Appends and returns a new empty "BadEventForGoodOther" element
     */
    de.affect.xml.AppraisalTag.BadEventForGoodOther addNewBadEventForGoodOther();
    
    /**
     * Unsets the "BadEventForGoodOther" element
     */
    void unsetBadEventForGoodOther();
    
    /**
     * Gets the "BadEventForBadOther" element
     */
    de.affect.xml.AppraisalTag.BadEventForBadOther getBadEventForBadOther();
    
    /**
     * True if has "BadEventForBadOther" element
     */
    boolean isSetBadEventForBadOther();
    
    /**
     * Sets the "BadEventForBadOther" element
     */
    void setBadEventForBadOther(de.affect.xml.AppraisalTag.BadEventForBadOther badEventForBadOther);
    
    /**
     * Appends and returns a new empty "BadEventForBadOther" element
     */
    de.affect.xml.AppraisalTag.BadEventForBadOther addNewBadEventForBadOther();
    
    /**
     * Unsets the "BadEventForBadOther" element
     */
    void unsetBadEventForBadOther();
    
    /**
     * Gets the "BadLikelyFutureEvent" element
     */
    de.affect.xml.AppraisalTag.BadLikelyFutureEvent getBadLikelyFutureEvent();
    
    /**
     * True if has "BadLikelyFutureEvent" element
     */
    boolean isSetBadLikelyFutureEvent();
    
    /**
     * Sets the "BadLikelyFutureEvent" element
     */
    void setBadLikelyFutureEvent(de.affect.xml.AppraisalTag.BadLikelyFutureEvent badLikelyFutureEvent);
    
    /**
     * Appends and returns a new empty "BadLikelyFutureEvent" element
     */
    de.affect.xml.AppraisalTag.BadLikelyFutureEvent addNewBadLikelyFutureEvent();
    
    /**
     * Unsets the "BadLikelyFutureEvent" element
     */
    void unsetBadLikelyFutureEvent();
    
    /**
     * Gets the "BadUnlikelyFutureEvent" element
     */
    de.affect.xml.AppraisalTag.BadUnlikelyFutureEvent getBadUnlikelyFutureEvent();
    
    /**
     * True if has "BadUnlikelyFutureEvent" element
     */
    boolean isSetBadUnlikelyFutureEvent();
    
    /**
     * Sets the "BadUnlikelyFutureEvent" element
     */
    void setBadUnlikelyFutureEvent(de.affect.xml.AppraisalTag.BadUnlikelyFutureEvent badUnlikelyFutureEvent);
    
    /**
     * Appends and returns a new empty "BadUnlikelyFutureEvent" element
     */
    de.affect.xml.AppraisalTag.BadUnlikelyFutureEvent addNewBadUnlikelyFutureEvent();
    
    /**
     * Unsets the "BadUnlikelyFutureEvent" element
     */
    void unsetBadUnlikelyFutureEvent();
    
    /**
     * Gets the "EventConfirmed" element
     */
    de.affect.xml.AppraisalTag.EventConfirmed getEventConfirmed();
    
    /**
     * True if has "EventConfirmed" element
     */
    boolean isSetEventConfirmed();
    
    /**
     * Sets the "EventConfirmed" element
     */
    void setEventConfirmed(de.affect.xml.AppraisalTag.EventConfirmed eventConfirmed);
    
    /**
     * Appends and returns a new empty "EventConfirmed" element
     */
    de.affect.xml.AppraisalTag.EventConfirmed addNewEventConfirmed();
    
    /**
     * Unsets the "EventConfirmed" element
     */
    void unsetEventConfirmed();
    
    /**
     * Gets the "EventDisconfirmed" element
     */
    de.affect.xml.AppraisalTag.EventDisconfirmed getEventDisconfirmed();
    
    /**
     * True if has "EventDisconfirmed" element
     */
    boolean isSetEventDisconfirmed();
    
    /**
     * Sets the "EventDisconfirmed" element
     */
    void setEventDisconfirmed(de.affect.xml.AppraisalTag.EventDisconfirmed eventDisconfirmed);
    
    /**
     * Appends and returns a new empty "EventDisconfirmed" element
     */
    de.affect.xml.AppraisalTag.EventDisconfirmed addNewEventDisconfirmed();
    
    /**
     * Unsets the "EventDisconfirmed" element
     */
    void unsetEventDisconfirmed();
    
    /**
     * Gets the "GoodActSelf" element
     */
    de.affect.xml.AppraisalTag.GoodActSelf getGoodActSelf();
    
    /**
     * True if has "GoodActSelf" element
     */
    boolean isSetGoodActSelf();
    
    /**
     * Sets the "GoodActSelf" element
     */
    void setGoodActSelf(de.affect.xml.AppraisalTag.GoodActSelf goodActSelf);
    
    /**
     * Appends and returns a new empty "GoodActSelf" element
     */
    de.affect.xml.AppraisalTag.GoodActSelf addNewGoodActSelf();
    
    /**
     * Unsets the "GoodActSelf" element
     */
    void unsetGoodActSelf();
    
    /**
     * Gets the "BadActSelf" element
     */
    de.affect.xml.AppraisalTag.BadActSelf getBadActSelf();
    
    /**
     * True if has "BadActSelf" element
     */
    boolean isSetBadActSelf();
    
    /**
     * Sets the "BadActSelf" element
     */
    void setBadActSelf(de.affect.xml.AppraisalTag.BadActSelf badActSelf);
    
    /**
     * Appends and returns a new empty "BadActSelf" element
     */
    de.affect.xml.AppraisalTag.BadActSelf addNewBadActSelf();
    
    /**
     * Unsets the "BadActSelf" element
     */
    void unsetBadActSelf();
    
    /**
     * Gets the "GoodActOther" element
     */
    de.affect.xml.AppraisalTag.GoodActOther getGoodActOther();
    
    /**
     * True if has "GoodActOther" element
     */
    boolean isSetGoodActOther();
    
    /**
     * Sets the "GoodActOther" element
     */
    void setGoodActOther(de.affect.xml.AppraisalTag.GoodActOther goodActOther);
    
    /**
     * Appends and returns a new empty "GoodActOther" element
     */
    de.affect.xml.AppraisalTag.GoodActOther addNewGoodActOther();
    
    /**
     * Unsets the "GoodActOther" element
     */
    void unsetGoodActOther();
    
    /**
     * Gets the "BadActOther" element
     */
    de.affect.xml.AppraisalTag.BadActOther getBadActOther();
    
    /**
     * True if has "BadActOther" element
     */
    boolean isSetBadActOther();
    
    /**
     * Sets the "BadActOther" element
     */
    void setBadActOther(de.affect.xml.AppraisalTag.BadActOther badActOther);
    
    /**
     * Appends and returns a new empty "BadActOther" element
     */
    de.affect.xml.AppraisalTag.BadActOther addNewBadActOther();
    
    /**
     * Unsets the "BadActOther" element
     */
    void unsetBadActOther();
    
    /**
     * Gets the "NiceThing" element
     */
    de.affect.xml.AppraisalTag.NiceThing getNiceThing();
    
    /**
     * True if has "NiceThing" element
     */
    boolean isSetNiceThing();
    
    /**
     * Sets the "NiceThing" element
     */
    void setNiceThing(de.affect.xml.AppraisalTag.NiceThing niceThing);
    
    /**
     * Appends and returns a new empty "NiceThing" element
     */
    de.affect.xml.AppraisalTag.NiceThing addNewNiceThing();
    
    /**
     * Unsets the "NiceThing" element
     */
    void unsetNiceThing();
    
    /**
     * Gets the "NastyThing" element
     */
    de.affect.xml.AppraisalTag.NastyThing getNastyThing();
    
    /**
     * True if has "NastyThing" element
     */
    boolean isSetNastyThing();
    
    /**
     * Sets the "NastyThing" element
     */
    void setNastyThing(de.affect.xml.AppraisalTag.NastyThing nastyThing);
    
    /**
     * Appends and returns a new empty "NastyThing" element
     */
    de.affect.xml.AppraisalTag.NastyThing addNewNastyThing();
    
    /**
     * Unsets the "NastyThing" element
     */
    void unsetNastyThing();
    
    /**
     * An XML GoodEvent(@xml.affect.de).
     *
     * This is a complex type.
     */
    public interface GoodEvent extends org.apache.xmlbeans.XmlObject
    {
        public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
            org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(GoodEvent.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s876F60A6E4A4858327667D81EFEC6F41").resolveHandle("goodevent7618elemtype");
        
        /**
         * Gets the "desirability" attribute
         */
        java.lang.String getDesirability();
        
        /**
         * Gets (as xml) the "desirability" attribute
         */
        de.affect.xml.Desirability xgetDesirability();
        
        /**
         * Sets the "desirability" attribute
         */
        void setDesirability(java.lang.String desirability);
        
        /**
         * Sets (as xml) the "desirability" attribute
         */
        void xsetDesirability(de.affect.xml.Desirability desirability);
        
        /**
         * A factory class with static methods for creating instances
         * of this type.
         */
        
        public static final class Factory
        {
            public static de.affect.xml.AppraisalTag.GoodEvent newInstance() {
              return (de.affect.xml.AppraisalTag.GoodEvent) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
            
            public static de.affect.xml.AppraisalTag.GoodEvent newInstance(org.apache.xmlbeans.XmlOptions options) {
              return (de.affect.xml.AppraisalTag.GoodEvent) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
            
            private Factory() { } // No instance of this class allowed
        }
    }
    
    /**
     * An XML GoodEventForGoodOther(@xml.affect.de).
     *
     * This is a complex type.
     */
    public interface GoodEventForGoodOther extends org.apache.xmlbeans.XmlObject
    {
        public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
            org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(GoodEventForGoodOther.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s876F60A6E4A4858327667D81EFEC6F41").resolveHandle("goodeventforgoodother382eelemtype");
        
        /**
         * Gets the "agency" attribute
         */
        java.lang.String getAgency();
        
        /**
         * Gets (as xml) the "agency" attribute
         */
        org.apache.xmlbeans.XmlString xgetAgency();
        
        /**
         * Sets the "agency" attribute
         */
        void setAgency(java.lang.String agency);
        
        /**
         * Sets (as xml) the "agency" attribute
         */
        void xsetAgency(org.apache.xmlbeans.XmlString agency);
        
        /**
         * Gets the "desirability" attribute
         */
        java.lang.String getDesirability();
        
        /**
         * Gets (as xml) the "desirability" attribute
         */
        de.affect.xml.Desirability xgetDesirability();
        
        /**
         * Sets the "desirability" attribute
         */
        void setDesirability(java.lang.String desirability);
        
        /**
         * Sets (as xml) the "desirability" attribute
         */
        void xsetDesirability(de.affect.xml.Desirability desirability);
        
        /**
         * Gets the "liking" attribute
         */
        java.lang.String getLiking();
        
        /**
         * Gets (as xml) the "liking" attribute
         */
        de.affect.xml.Liking xgetLiking();
        
        /**
         * Sets the "liking" attribute
         */
        void setLiking(java.lang.String liking);
        
        /**
         * Sets (as xml) the "liking" attribute
         */
        void xsetLiking(de.affect.xml.Liking liking);
        
        /**
         * A factory class with static methods for creating instances
         * of this type.
         */
        
        public static final class Factory
        {
            public static de.affect.xml.AppraisalTag.GoodEventForGoodOther newInstance() {
              return (de.affect.xml.AppraisalTag.GoodEventForGoodOther) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
            
            public static de.affect.xml.AppraisalTag.GoodEventForGoodOther newInstance(org.apache.xmlbeans.XmlOptions options) {
              return (de.affect.xml.AppraisalTag.GoodEventForGoodOther) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
            
            private Factory() { } // No instance of this class allowed
        }
    }
    
    /**
     * An XML GoodEventForBadOther(@xml.affect.de).
     *
     * This is a complex type.
     */
    public interface GoodEventForBadOther extends org.apache.xmlbeans.XmlObject
    {
        public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
            org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(GoodEventForBadOther.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s876F60A6E4A4858327667D81EFEC6F41").resolveHandle("goodeventforbadotherb5eeelemtype");
        
        /**
         * Gets the "agency" attribute
         */
        java.lang.String getAgency();
        
        /**
         * Gets (as xml) the "agency" attribute
         */
        org.apache.xmlbeans.XmlString xgetAgency();
        
        /**
         * Sets the "agency" attribute
         */
        void setAgency(java.lang.String agency);
        
        /**
         * Sets (as xml) the "agency" attribute
         */
        void xsetAgency(org.apache.xmlbeans.XmlString agency);
        
        /**
         * Gets the "desirability" attribute
         */
        java.lang.String getDesirability();
        
        /**
         * Gets (as xml) the "desirability" attribute
         */
        de.affect.xml.Desirability xgetDesirability();
        
        /**
         * Sets the "desirability" attribute
         */
        void setDesirability(java.lang.String desirability);
        
        /**
         * Sets (as xml) the "desirability" attribute
         */
        void xsetDesirability(de.affect.xml.Desirability desirability);
        
        /**
         * Gets the "liking" attribute
         */
        java.lang.String getLiking();
        
        /**
         * Gets (as xml) the "liking" attribute
         */
        de.affect.xml.Disliking xgetLiking();
        
        /**
         * Sets the "liking" attribute
         */
        void setLiking(java.lang.String liking);
        
        /**
         * Sets (as xml) the "liking" attribute
         */
        void xsetLiking(de.affect.xml.Disliking liking);
        
        /**
         * A factory class with static methods for creating instances
         * of this type.
         */
        
        public static final class Factory
        {
            public static de.affect.xml.AppraisalTag.GoodEventForBadOther newInstance() {
              return (de.affect.xml.AppraisalTag.GoodEventForBadOther) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
            
            public static de.affect.xml.AppraisalTag.GoodEventForBadOther newInstance(org.apache.xmlbeans.XmlOptions options) {
              return (de.affect.xml.AppraisalTag.GoodEventForBadOther) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
            
            private Factory() { } // No instance of this class allowed
        }
    }
    
    /**
     * An XML GoodLikelyFutureEvent(@xml.affect.de).
     *
     * This is a complex type.
     */
    public interface GoodLikelyFutureEvent extends org.apache.xmlbeans.XmlObject
    {
        public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
            org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(GoodLikelyFutureEvent.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s876F60A6E4A4858327667D81EFEC6F41").resolveHandle("goodlikelyfutureevent5b3felemtype");
        
        /**
         * Gets the "desirability" attribute
         */
        java.lang.String getDesirability();
        
        /**
         * Gets (as xml) the "desirability" attribute
         */
        de.affect.xml.Desirability xgetDesirability();
        
        /**
         * Sets the "desirability" attribute
         */
        void setDesirability(java.lang.String desirability);
        
        /**
         * Sets (as xml) the "desirability" attribute
         */
        void xsetDesirability(de.affect.xml.Desirability desirability);
        
        /**
         * Gets the "likelihood" attribute
         */
        java.lang.String getLikelihood();
        
        /**
         * Gets (as xml) the "likelihood" attribute
         */
        de.affect.xml.Likelihood xgetLikelihood();
        
        /**
         * Sets the "likelihood" attribute
         */
        void setLikelihood(java.lang.String likelihood);
        
        /**
         * Sets (as xml) the "likelihood" attribute
         */
        void xsetLikelihood(de.affect.xml.Likelihood likelihood);
        
        /**
         * A factory class with static methods for creating instances
         * of this type.
         */
        
        public static final class Factory
        {
            public static de.affect.xml.AppraisalTag.GoodLikelyFutureEvent newInstance() {
              return (de.affect.xml.AppraisalTag.GoodLikelyFutureEvent) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
            
            public static de.affect.xml.AppraisalTag.GoodLikelyFutureEvent newInstance(org.apache.xmlbeans.XmlOptions options) {
              return (de.affect.xml.AppraisalTag.GoodLikelyFutureEvent) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
            
            private Factory() { } // No instance of this class allowed
        }
    }
    
    /**
     * An XML GoodUnlikelyFutureEvent(@xml.affect.de).
     *
     * This is a complex type.
     */
    public interface GoodUnlikelyFutureEvent extends org.apache.xmlbeans.XmlObject
    {
        public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
            org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(GoodUnlikelyFutureEvent.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s876F60A6E4A4858327667D81EFEC6F41").resolveHandle("goodunlikelyfutureevente4d8elemtype");
        
        /**
         * Gets the "desirability" attribute
         */
        java.lang.String getDesirability();
        
        /**
         * Gets (as xml) the "desirability" attribute
         */
        de.affect.xml.Desirability xgetDesirability();
        
        /**
         * Sets the "desirability" attribute
         */
        void setDesirability(java.lang.String desirability);
        
        /**
         * Sets (as xml) the "desirability" attribute
         */
        void xsetDesirability(de.affect.xml.Desirability desirability);
        
        /**
         * Gets the "likelihood" attribute
         */
        java.lang.String getLikelihood();
        
        /**
         * Gets (as xml) the "likelihood" attribute
         */
        de.affect.xml.Unlikelihood xgetLikelihood();
        
        /**
         * Sets the "likelihood" attribute
         */
        void setLikelihood(java.lang.String likelihood);
        
        /**
         * Sets (as xml) the "likelihood" attribute
         */
        void xsetLikelihood(de.affect.xml.Unlikelihood likelihood);
        
        /**
         * A factory class with static methods for creating instances
         * of this type.
         */
        
        public static final class Factory
        {
            public static de.affect.xml.AppraisalTag.GoodUnlikelyFutureEvent newInstance() {
              return (de.affect.xml.AppraisalTag.GoodUnlikelyFutureEvent) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
            
            public static de.affect.xml.AppraisalTag.GoodUnlikelyFutureEvent newInstance(org.apache.xmlbeans.XmlOptions options) {
              return (de.affect.xml.AppraisalTag.GoodUnlikelyFutureEvent) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
            
            private Factory() { } // No instance of this class allowed
        }
    }
    
    /**
     * An XML BadEvent(@xml.affect.de).
     *
     * This is a complex type.
     */
    public interface BadEvent extends org.apache.xmlbeans.XmlObject
    {
        public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
            org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(BadEvent.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s876F60A6E4A4858327667D81EFEC6F41").resolveHandle("badevente2f0elemtype");
        
        /**
         * Gets the "desirability" attribute
         */
        java.lang.String getDesirability();
        
        /**
         * Gets (as xml) the "desirability" attribute
         */
        de.affect.xml.Undesirability xgetDesirability();
        
        /**
         * Sets the "desirability" attribute
         */
        void setDesirability(java.lang.String desirability);
        
        /**
         * Sets (as xml) the "desirability" attribute
         */
        void xsetDesirability(de.affect.xml.Undesirability desirability);
        
        /**
         * A factory class with static methods for creating instances
         * of this type.
         */
        
        public static final class Factory
        {
            public static de.affect.xml.AppraisalTag.BadEvent newInstance() {
              return (de.affect.xml.AppraisalTag.BadEvent) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
            
            public static de.affect.xml.AppraisalTag.BadEvent newInstance(org.apache.xmlbeans.XmlOptions options) {
              return (de.affect.xml.AppraisalTag.BadEvent) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
            
            private Factory() { } // No instance of this class allowed
        }
    }
    
    /**
     * An XML BadEventForGoodOther(@xml.affect.de).
     *
     * This is a complex type.
     */
    public interface BadEventForGoodOther extends org.apache.xmlbeans.XmlObject
    {
        public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
            org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(BadEventForGoodOther.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s876F60A6E4A4858327667D81EFEC6F41").resolveHandle("badeventforgoodother2106elemtype");
        
        /**
         * Gets the "agency" attribute
         */
        java.lang.String getAgency();
        
        /**
         * Gets (as xml) the "agency" attribute
         */
        org.apache.xmlbeans.XmlString xgetAgency();
        
        /**
         * Sets the "agency" attribute
         */
        void setAgency(java.lang.String agency);
        
        /**
         * Sets (as xml) the "agency" attribute
         */
        void xsetAgency(org.apache.xmlbeans.XmlString agency);
        
        /**
         * Gets the "desirability" attribute
         */
        java.lang.String getDesirability();
        
        /**
         * Gets (as xml) the "desirability" attribute
         */
        de.affect.xml.Undesirability xgetDesirability();
        
        /**
         * Sets the "desirability" attribute
         */
        void setDesirability(java.lang.String desirability);
        
        /**
         * Sets (as xml) the "desirability" attribute
         */
        void xsetDesirability(de.affect.xml.Undesirability desirability);
        
        /**
         * Gets the "liking" attribute
         */
        java.lang.String getLiking();
        
        /**
         * Gets (as xml) the "liking" attribute
         */
        de.affect.xml.Liking xgetLiking();
        
        /**
         * Sets the "liking" attribute
         */
        void setLiking(java.lang.String liking);
        
        /**
         * Sets (as xml) the "liking" attribute
         */
        void xsetLiking(de.affect.xml.Liking liking);
        
        /**
         * A factory class with static methods for creating instances
         * of this type.
         */
        
        public static final class Factory
        {
            public static de.affect.xml.AppraisalTag.BadEventForGoodOther newInstance() {
              return (de.affect.xml.AppraisalTag.BadEventForGoodOther) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
            
            public static de.affect.xml.AppraisalTag.BadEventForGoodOther newInstance(org.apache.xmlbeans.XmlOptions options) {
              return (de.affect.xml.AppraisalTag.BadEventForGoodOther) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
            
            private Factory() { } // No instance of this class allowed
        }
    }
    
    /**
     * An XML BadEventForBadOther(@xml.affect.de).
     *
     * This is a complex type.
     */
    public interface BadEventForBadOther extends org.apache.xmlbeans.XmlObject
    {
        public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
            org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(BadEventForBadOther.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s876F60A6E4A4858327667D81EFEC6F41").resolveHandle("badeventforbadother5216elemtype");
        
        /**
         * Gets the "agency" attribute
         */
        java.lang.String getAgency();
        
        /**
         * Gets (as xml) the "agency" attribute
         */
        org.apache.xmlbeans.XmlString xgetAgency();
        
        /**
         * Sets the "agency" attribute
         */
        void setAgency(java.lang.String agency);
        
        /**
         * Sets (as xml) the "agency" attribute
         */
        void xsetAgency(org.apache.xmlbeans.XmlString agency);
        
        /**
         * Gets the "desirability" attribute
         */
        java.lang.String getDesirability();
        
        /**
         * Gets (as xml) the "desirability" attribute
         */
        de.affect.xml.Undesirability xgetDesirability();
        
        /**
         * Sets the "desirability" attribute
         */
        void setDesirability(java.lang.String desirability);
        
        /**
         * Sets (as xml) the "desirability" attribute
         */
        void xsetDesirability(de.affect.xml.Undesirability desirability);
        
        /**
         * Gets the "liking" attribute
         */
        java.lang.String getLiking();
        
        /**
         * Gets (as xml) the "liking" attribute
         */
        de.affect.xml.Disliking xgetLiking();
        
        /**
         * Sets the "liking" attribute
         */
        void setLiking(java.lang.String liking);
        
        /**
         * Sets (as xml) the "liking" attribute
         */
        void xsetLiking(de.affect.xml.Disliking liking);
        
        /**
         * A factory class with static methods for creating instances
         * of this type.
         */
        
        public static final class Factory
        {
            public static de.affect.xml.AppraisalTag.BadEventForBadOther newInstance() {
              return (de.affect.xml.AppraisalTag.BadEventForBadOther) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
            
            public static de.affect.xml.AppraisalTag.BadEventForBadOther newInstance(org.apache.xmlbeans.XmlOptions options) {
              return (de.affect.xml.AppraisalTag.BadEventForBadOther) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
            
            private Factory() { } // No instance of this class allowed
        }
    }
    
    /**
     * An XML BadLikelyFutureEvent(@xml.affect.de).
     *
     * This is a complex type.
     */
    public interface BadLikelyFutureEvent extends org.apache.xmlbeans.XmlObject
    {
        public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
            org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(BadLikelyFutureEvent.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s876F60A6E4A4858327667D81EFEC6F41").resolveHandle("badlikelyfutureevent4417elemtype");
        
        /**
         * Gets the "desirability" attribute
         */
        java.lang.String getDesirability();
        
        /**
         * Gets (as xml) the "desirability" attribute
         */
        de.affect.xml.Undesirability xgetDesirability();
        
        /**
         * Sets the "desirability" attribute
         */
        void setDesirability(java.lang.String desirability);
        
        /**
         * Sets (as xml) the "desirability" attribute
         */
        void xsetDesirability(de.affect.xml.Undesirability desirability);
        
        /**
         * Gets the "likelihood" attribute
         */
        java.lang.String getLikelihood();
        
        /**
         * Gets (as xml) the "likelihood" attribute
         */
        de.affect.xml.Likelihood xgetLikelihood();
        
        /**
         * Sets the "likelihood" attribute
         */
        void setLikelihood(java.lang.String likelihood);
        
        /**
         * Sets (as xml) the "likelihood" attribute
         */
        void xsetLikelihood(de.affect.xml.Likelihood likelihood);
        
        /**
         * A factory class with static methods for creating instances
         * of this type.
         */
        
        public static final class Factory
        {
            public static de.affect.xml.AppraisalTag.BadLikelyFutureEvent newInstance() {
              return (de.affect.xml.AppraisalTag.BadLikelyFutureEvent) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
            
            public static de.affect.xml.AppraisalTag.BadLikelyFutureEvent newInstance(org.apache.xmlbeans.XmlOptions options) {
              return (de.affect.xml.AppraisalTag.BadLikelyFutureEvent) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
            
            private Factory() { } // No instance of this class allowed
        }
    }
    
    /**
     * An XML BadUnlikelyFutureEvent(@xml.affect.de).
     *
     * This is a complex type.
     */
    public interface BadUnlikelyFutureEvent extends org.apache.xmlbeans.XmlObject
    {
        public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
            org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(BadUnlikelyFutureEvent.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s876F60A6E4A4858327667D81EFEC6F41").resolveHandle("badunlikelyfutureeventf7b0elemtype");
        
        /**
         * Gets the "desirability" attribute
         */
        java.lang.String getDesirability();
        
        /**
         * Gets (as xml) the "desirability" attribute
         */
        de.affect.xml.Undesirability xgetDesirability();
        
        /**
         * Sets the "desirability" attribute
         */
        void setDesirability(java.lang.String desirability);
        
        /**
         * Sets (as xml) the "desirability" attribute
         */
        void xsetDesirability(de.affect.xml.Undesirability desirability);
        
        /**
         * Gets the "likelihood" attribute
         */
        java.lang.String getLikelihood();
        
        /**
         * Gets (as xml) the "likelihood" attribute
         */
        de.affect.xml.Unlikelihood xgetLikelihood();
        
        /**
         * Sets the "likelihood" attribute
         */
        void setLikelihood(java.lang.String likelihood);
        
        /**
         * Sets (as xml) the "likelihood" attribute
         */
        void xsetLikelihood(de.affect.xml.Unlikelihood likelihood);
        
        /**
         * A factory class with static methods for creating instances
         * of this type.
         */
        
        public static final class Factory
        {
            public static de.affect.xml.AppraisalTag.BadUnlikelyFutureEvent newInstance() {
              return (de.affect.xml.AppraisalTag.BadUnlikelyFutureEvent) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
            
            public static de.affect.xml.AppraisalTag.BadUnlikelyFutureEvent newInstance(org.apache.xmlbeans.XmlOptions options) {
              return (de.affect.xml.AppraisalTag.BadUnlikelyFutureEvent) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
            
            private Factory() { } // No instance of this class allowed
        }
    }
    
    /**
     * An XML EventConfirmed(@xml.affect.de).
     *
     * This is a complex type.
     */
    public interface EventConfirmed extends org.apache.xmlbeans.XmlObject
    {
        public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
            org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(EventConfirmed.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s876F60A6E4A4858327667D81EFEC6F41").resolveHandle("eventconfirmedb2a0elemtype");
        
        /**
         * Gets the "realization" attribute
         */
        java.lang.String getRealization();
        
        /**
         * Gets (as xml) the "realization" attribute
         */
        org.apache.xmlbeans.XmlString xgetRealization();
        
        /**
         * Sets the "realization" attribute
         */
        void setRealization(java.lang.String realization);
        
        /**
         * Sets (as xml) the "realization" attribute
         */
        void xsetRealization(org.apache.xmlbeans.XmlString realization);
        
        /**
         * A factory class with static methods for creating instances
         * of this type.
         */
        
        public static final class Factory
        {
            public static de.affect.xml.AppraisalTag.EventConfirmed newInstance() {
              return (de.affect.xml.AppraisalTag.EventConfirmed) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
            
            public static de.affect.xml.AppraisalTag.EventConfirmed newInstance(org.apache.xmlbeans.XmlOptions options) {
              return (de.affect.xml.AppraisalTag.EventConfirmed) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
            
            private Factory() { } // No instance of this class allowed
        }
    }
    
    /**
     * An XML EventDisconfirmed(@xml.affect.de).
     *
     * This is a complex type.
     */
    public interface EventDisconfirmed extends org.apache.xmlbeans.XmlObject
    {
        public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
            org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(EventDisconfirmed.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s876F60A6E4A4858327667D81EFEC6F41").resolveHandle("eventdisconfirmedfe6aelemtype");
        
        /**
         * Gets the "realization" attribute
         */
        java.lang.String getRealization();
        
        /**
         * Gets (as xml) the "realization" attribute
         */
        org.apache.xmlbeans.XmlString xgetRealization();
        
        /**
         * Sets the "realization" attribute
         */
        void setRealization(java.lang.String realization);
        
        /**
         * Sets (as xml) the "realization" attribute
         */
        void xsetRealization(org.apache.xmlbeans.XmlString realization);
        
        /**
         * A factory class with static methods for creating instances
         * of this type.
         */
        
        public static final class Factory
        {
            public static de.affect.xml.AppraisalTag.EventDisconfirmed newInstance() {
              return (de.affect.xml.AppraisalTag.EventDisconfirmed) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
            
            public static de.affect.xml.AppraisalTag.EventDisconfirmed newInstance(org.apache.xmlbeans.XmlOptions options) {
              return (de.affect.xml.AppraisalTag.EventDisconfirmed) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
            
            private Factory() { } // No instance of this class allowed
        }
    }
    
    /**
     * An XML GoodActSelf(@xml.affect.de).
     *
     * This is a complex type.
     */
    public interface GoodActSelf extends org.apache.xmlbeans.XmlObject
    {
        public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
            org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(GoodActSelf.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s876F60A6E4A4858327667D81EFEC6F41").resolveHandle("goodactself0ef4elemtype");
        
        /**
         * Gets the "agency" attribute
         */
        java.lang.String getAgency();
        
        /**
         * Gets (as xml) the "agency" attribute
         */
        org.apache.xmlbeans.XmlString xgetAgency();
        
        /**
         * Sets the "agency" attribute
         */
        void setAgency(java.lang.String agency);
        
        /**
         * Sets (as xml) the "agency" attribute
         */
        void xsetAgency(org.apache.xmlbeans.XmlString agency);
        
        /**
         * Gets the "praiseworthiness" attribute
         */
        java.lang.String getPraiseworthiness();
        
        /**
         * Gets (as xml) the "praiseworthiness" attribute
         */
        de.affect.xml.Praiseworthiness xgetPraiseworthiness();
        
        /**
         * Sets the "praiseworthiness" attribute
         */
        void setPraiseworthiness(java.lang.String praiseworthiness);
        
        /**
         * Sets (as xml) the "praiseworthiness" attribute
         */
        void xsetPraiseworthiness(de.affect.xml.Praiseworthiness praiseworthiness);
        
        /**
         * A factory class with static methods for creating instances
         * of this type.
         */
        
        public static final class Factory
        {
            public static de.affect.xml.AppraisalTag.GoodActSelf newInstance() {
              return (de.affect.xml.AppraisalTag.GoodActSelf) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
            
            public static de.affect.xml.AppraisalTag.GoodActSelf newInstance(org.apache.xmlbeans.XmlOptions options) {
              return (de.affect.xml.AppraisalTag.GoodActSelf) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
            
            private Factory() { } // No instance of this class allowed
        }
    }
    
    /**
     * An XML BadActSelf(@xml.affect.de).
     *
     * This is a complex type.
     */
    public interface BadActSelf extends org.apache.xmlbeans.XmlObject
    {
        public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
            org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(BadActSelf.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s876F60A6E4A4858327667D81EFEC6F41").resolveHandle("badactselfa5ccelemtype");
        
        /**
         * Gets the "agency" attribute
         */
        java.lang.String getAgency();
        
        /**
         * Gets (as xml) the "agency" attribute
         */
        org.apache.xmlbeans.XmlString xgetAgency();
        
        /**
         * Sets the "agency" attribute
         */
        void setAgency(java.lang.String agency);
        
        /**
         * Sets (as xml) the "agency" attribute
         */
        void xsetAgency(org.apache.xmlbeans.XmlString agency);
        
        /**
         * Gets the "praiseworthiness" attribute
         */
        java.lang.String getPraiseworthiness();
        
        /**
         * Gets (as xml) the "praiseworthiness" attribute
         */
        de.affect.xml.Blameworthiness xgetPraiseworthiness();
        
        /**
         * Sets the "praiseworthiness" attribute
         */
        void setPraiseworthiness(java.lang.String praiseworthiness);
        
        /**
         * Sets (as xml) the "praiseworthiness" attribute
         */
        void xsetPraiseworthiness(de.affect.xml.Blameworthiness praiseworthiness);
        
        /**
         * A factory class with static methods for creating instances
         * of this type.
         */
        
        public static final class Factory
        {
            public static de.affect.xml.AppraisalTag.BadActSelf newInstance() {
              return (de.affect.xml.AppraisalTag.BadActSelf) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
            
            public static de.affect.xml.AppraisalTag.BadActSelf newInstance(org.apache.xmlbeans.XmlOptions options) {
              return (de.affect.xml.AppraisalTag.BadActSelf) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
            
            private Factory() { } // No instance of this class allowed
        }
    }
    
    /**
     * An XML GoodActOther(@xml.affect.de).
     *
     * This is a complex type.
     */
    public interface GoodActOther extends org.apache.xmlbeans.XmlObject
    {
        public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
            org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(GoodActOther.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s876F60A6E4A4858327667D81EFEC6F41").resolveHandle("goodactother58caelemtype");
        
        /**
         * Gets the "agency" attribute
         */
        java.lang.String getAgency();
        
        /**
         * Gets (as xml) the "agency" attribute
         */
        org.apache.xmlbeans.XmlString xgetAgency();
        
        /**
         * Sets the "agency" attribute
         */
        void setAgency(java.lang.String agency);
        
        /**
         * Sets (as xml) the "agency" attribute
         */
        void xsetAgency(org.apache.xmlbeans.XmlString agency);
        
        /**
         * Gets the "praiseworthiness" attribute
         */
        java.lang.String getPraiseworthiness();
        
        /**
         * Gets (as xml) the "praiseworthiness" attribute
         */
        de.affect.xml.Praiseworthiness xgetPraiseworthiness();
        
        /**
         * Sets the "praiseworthiness" attribute
         */
        void setPraiseworthiness(java.lang.String praiseworthiness);
        
        /**
         * Sets (as xml) the "praiseworthiness" attribute
         */
        void xsetPraiseworthiness(de.affect.xml.Praiseworthiness praiseworthiness);
        
        /**
         * A factory class with static methods for creating instances
         * of this type.
         */
        
        public static final class Factory
        {
            public static de.affect.xml.AppraisalTag.GoodActOther newInstance() {
              return (de.affect.xml.AppraisalTag.GoodActOther) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
            
            public static de.affect.xml.AppraisalTag.GoodActOther newInstance(org.apache.xmlbeans.XmlOptions options) {
              return (de.affect.xml.AppraisalTag.GoodActOther) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
            
            private Factory() { } // No instance of this class allowed
        }
    }
    
    /**
     * An XML BadActOther(@xml.affect.de).
     *
     * This is a complex type.
     */
    public interface BadActOther extends org.apache.xmlbeans.XmlObject
    {
        public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
            org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(BadActOther.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s876F60A6E4A4858327667D81EFEC6F41").resolveHandle("badactother9cf2elemtype");
        
        /**
         * Gets the "agency" attribute
         */
        java.lang.String getAgency();
        
        /**
         * Gets (as xml) the "agency" attribute
         */
        org.apache.xmlbeans.XmlString xgetAgency();
        
        /**
         * Sets the "agency" attribute
         */
        void setAgency(java.lang.String agency);
        
        /**
         * Sets (as xml) the "agency" attribute
         */
        void xsetAgency(org.apache.xmlbeans.XmlString agency);
        
        /**
         * Gets the "praiseworthiness" attribute
         */
        java.lang.String getPraiseworthiness();
        
        /**
         * Gets (as xml) the "praiseworthiness" attribute
         */
        de.affect.xml.Blameworthiness xgetPraiseworthiness();
        
        /**
         * Sets the "praiseworthiness" attribute
         */
        void setPraiseworthiness(java.lang.String praiseworthiness);
        
        /**
         * Sets (as xml) the "praiseworthiness" attribute
         */
        void xsetPraiseworthiness(de.affect.xml.Blameworthiness praiseworthiness);
        
        /**
         * A factory class with static methods for creating instances
         * of this type.
         */
        
        public static final class Factory
        {
            public static de.affect.xml.AppraisalTag.BadActOther newInstance() {
              return (de.affect.xml.AppraisalTag.BadActOther) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
            
            public static de.affect.xml.AppraisalTag.BadActOther newInstance(org.apache.xmlbeans.XmlOptions options) {
              return (de.affect.xml.AppraisalTag.BadActOther) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
            
            private Factory() { } // No instance of this class allowed
        }
    }
    
    /**
     * An XML NiceThing(@xml.affect.de).
     *
     * This is a complex type.
     */
    public interface NiceThing extends org.apache.xmlbeans.XmlObject
    {
        public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
            org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(NiceThing.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s876F60A6E4A4858327667D81EFEC6F41").resolveHandle("nicething62e4elemtype");
        
        /**
         * Gets the "appealingness" attribute
         */
        java.lang.String getAppealingness();
        
        /**
         * Gets (as xml) the "appealingness" attribute
         */
        de.affect.xml.Appealingness xgetAppealingness();
        
        /**
         * Sets the "appealingness" attribute
         */
        void setAppealingness(java.lang.String appealingness);
        
        /**
         * Sets (as xml) the "appealingness" attribute
         */
        void xsetAppealingness(de.affect.xml.Appealingness appealingness);
        
        /**
         * A factory class with static methods for creating instances
         * of this type.
         */
        
        public static final class Factory
        {
            public static de.affect.xml.AppraisalTag.NiceThing newInstance() {
              return (de.affect.xml.AppraisalTag.NiceThing) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
            
            public static de.affect.xml.AppraisalTag.NiceThing newInstance(org.apache.xmlbeans.XmlOptions options) {
              return (de.affect.xml.AppraisalTag.NiceThing) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
            
            private Factory() { } // No instance of this class allowed
        }
    }
    
    /**
     * An XML NastyThing(@xml.affect.de).
     *
     * This is a complex type.
     */
    public interface NastyThing extends org.apache.xmlbeans.XmlObject
    {
        public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
            org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(NastyThing.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s876F60A6E4A4858327667D81EFEC6F41").resolveHandle("nastything7abcelemtype");
        
        /**
         * Gets the "appealingness" attribute
         */
        java.lang.String getAppealingness();
        
        /**
         * Gets (as xml) the "appealingness" attribute
         */
        de.affect.xml.Disappealingness xgetAppealingness();
        
        /**
         * Sets the "appealingness" attribute
         */
        void setAppealingness(java.lang.String appealingness);
        
        /**
         * Sets (as xml) the "appealingness" attribute
         */
        void xsetAppealingness(de.affect.xml.Disappealingness appealingness);
        
        /**
         * A factory class with static methods for creating instances
         * of this type.
         */
        
        public static final class Factory
        {
            public static de.affect.xml.AppraisalTag.NastyThing newInstance() {
              return (de.affect.xml.AppraisalTag.NastyThing) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
            
            public static de.affect.xml.AppraisalTag.NastyThing newInstance(org.apache.xmlbeans.XmlOptions options) {
              return (de.affect.xml.AppraisalTag.NastyThing) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
            
            private Factory() { } // No instance of this class allowed
        }
    }
    
    /**
     * A factory class with static methods for creating instances
     * of this type.
     */
    
    public static final class Factory
    {
        public static de.affect.xml.AppraisalTag newInstance() {
          return (de.affect.xml.AppraisalTag) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
        
        public static de.affect.xml.AppraisalTag newInstance(org.apache.xmlbeans.XmlOptions options) {
          return (de.affect.xml.AppraisalTag) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
        
        /** @param xmlAsString the string value to parse */
        public static de.affect.xml.AppraisalTag parse(java.lang.String xmlAsString) throws org.apache.xmlbeans.XmlException {
          return (de.affect.xml.AppraisalTag) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().parse( xmlAsString, type, null ); }
        
        public static de.affect.xml.AppraisalTag parse(java.lang.String xmlAsString, org.apache.xmlbeans.XmlOptions options) throws org.apache.xmlbeans.XmlException {
          return (de.affect.xml.AppraisalTag) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().parse( xmlAsString, type, options ); }
        
        /** @param file the file from which to load an xml document */
        public static de.affect.xml.AppraisalTag parse(java.io.File file) throws org.apache.xmlbeans.XmlException, java.io.IOException {
          return (de.affect.xml.AppraisalTag) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().parse( file, type, null ); }
        
        public static de.affect.xml.AppraisalTag parse(java.io.File file, org.apache.xmlbeans.XmlOptions options) throws org.apache.xmlbeans.XmlException, java.io.IOException {
          return (de.affect.xml.AppraisalTag) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().parse( file, type, options ); }
        
        public static de.affect.xml.AppraisalTag parse(java.net.URL u) throws org.apache.xmlbeans.XmlException, java.io.IOException {
          return (de.affect.xml.AppraisalTag) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().parse( u, type, null ); }
        
        public static de.affect.xml.AppraisalTag parse(java.net.URL u, org.apache.xmlbeans.XmlOptions options) throws org.apache.xmlbeans.XmlException, java.io.IOException {
          return (de.affect.xml.AppraisalTag) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().parse( u, type, options ); }
        
        public static de.affect.xml.AppraisalTag parse(java.io.InputStream is) throws org.apache.xmlbeans.XmlException, java.io.IOException {
          return (de.affect.xml.AppraisalTag) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().parse( is, type, null ); }
        
        public static de.affect.xml.AppraisalTag parse(java.io.InputStream is, org.apache.xmlbeans.XmlOptions options) throws org.apache.xmlbeans.XmlException, java.io.IOException {
          return (de.affect.xml.AppraisalTag) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().parse( is, type, options ); }
        
        public static de.affect.xml.AppraisalTag parse(java.io.Reader r) throws org.apache.xmlbeans.XmlException, java.io.IOException {
          return (de.affect.xml.AppraisalTag) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().parse( r, type, null ); }
        
        public static de.affect.xml.AppraisalTag parse(java.io.Reader r, org.apache.xmlbeans.XmlOptions options) throws org.apache.xmlbeans.XmlException, java.io.IOException {
          return (de.affect.xml.AppraisalTag) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().parse( r, type, options ); }
        
        public static de.affect.xml.AppraisalTag parse(javax.xml.stream.XMLStreamReader sr) throws org.apache.xmlbeans.XmlException {
          return (de.affect.xml.AppraisalTag) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().parse( sr, type, null ); }
        
        public static de.affect.xml.AppraisalTag parse(javax.xml.stream.XMLStreamReader sr, org.apache.xmlbeans.XmlOptions options) throws org.apache.xmlbeans.XmlException {
          return (de.affect.xml.AppraisalTag) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().parse( sr, type, options ); }
        
        public static de.affect.xml.AppraisalTag parse(org.w3c.dom.Node node) throws org.apache.xmlbeans.XmlException {
          return (de.affect.xml.AppraisalTag) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().parse( node, type, null ); }
        
        public static de.affect.xml.AppraisalTag parse(org.w3c.dom.Node node, org.apache.xmlbeans.XmlOptions options) throws org.apache.xmlbeans.XmlException {
          return (de.affect.xml.AppraisalTag) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().parse( node, type, options ); }
        
        /** @deprecated {@link XMLInputStream} */
        public static de.affect.xml.AppraisalTag parse(org.apache.xmlbeans.xml.stream.XMLInputStream xis) throws org.apache.xmlbeans.XmlException, org.apache.xmlbeans.xml.stream.XMLStreamException {
          return (de.affect.xml.AppraisalTag) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().parse( xis, type, null ); }
        
        /** @deprecated {@link XMLInputStream} */
        public static de.affect.xml.AppraisalTag parse(org.apache.xmlbeans.xml.stream.XMLInputStream xis, org.apache.xmlbeans.XmlOptions options) throws org.apache.xmlbeans.XmlException, org.apache.xmlbeans.xml.stream.XMLStreamException {
          return (de.affect.xml.AppraisalTag) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().parse( xis, type, options ); }
        
        /** @deprecated {@link XMLInputStream} */
        public static org.apache.xmlbeans.xml.stream.XMLInputStream newValidatingXMLInputStream(org.apache.xmlbeans.xml.stream.XMLInputStream xis) throws org.apache.xmlbeans.XmlException, org.apache.xmlbeans.xml.stream.XMLStreamException {
          return org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newValidatingXMLInputStream( xis, type, null ); }
        
        /** @deprecated {@link XMLInputStream} */
        public static org.apache.xmlbeans.xml.stream.XMLInputStream newValidatingXMLInputStream(org.apache.xmlbeans.xml.stream.XMLInputStream xis, org.apache.xmlbeans.XmlOptions options) throws org.apache.xmlbeans.XmlException, org.apache.xmlbeans.xml.stream.XMLStreamException {
          return org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newValidatingXMLInputStream( xis, type, options ); }
        
        private Factory() { } // No instance of this class allowed
    }
}
